import sys
from event import Event
from model import Model
from simulation import Simulation
import random as r
#Alumno: Luis Angel Rivera Sanchez
#Matricula: 2133042914
#               Ejercicios de la semana IX


class Algorithm2(Model):
	def init(self):
		self.visited=False
		self.father=self.id
		self.count=1
		self.num = r.random()*10
		self.Mayor = (self.id, self.num)
		print("Nodo"+str(self.id)+": Inicializo algoritmo\n","\tVecinos =", self.neighbors,"\n\tNumero generado = "+str(self.num))

	def receive(self,event):
		self.count -= 1
		idR, numR = event.name

		#print("Yo soy el Nodo %d y recibí mensaje del Nodo %d a los %f segundos." % (self.id, event.source, self.clock))

		#Revisa su tupla con la tupla del remitente.
		if(self.Mayor[1] < numR):
			self.Mayor = event.name#Si es mayor la tupla del remitente, se guarda.


		if self.visited == False:
			#print("Soy %d y recibo PRIMER mensaje de %d en tiempo t= %f" % (self.id,event.source,self.clock))
			self.visited=True
			self.father = event.source
			for t in self.neighbors:
				if t != self.father:
					newevent = Event((-1,-1),self.clock+1.0,t,self.id)
					self.transmit(newevent)
					self.count+=1

		if self.count == 0:
			if self.father != self.id:
				print ("Nodo %d :Termino algoritmo\n\tpadre = %d" % (self.id, self.father))
				newevent = Event(self.Mayor,self.clock+1.0,self.father,self.id)
				self.transmit(newevent)
			else:
				print ("Nodo %d :Termino algoritmo\n\tpadre = yooooo" % self.id)
				print ("el número más grande es: ",self.Mayor)



#Igualito a pi.py
if len(sys.argv) != 2:
	print ("Falta en nombre del archivo")
	raise SystemExit(1)
experiment = Simulation(sys.argv[1], 500)

for i in range(1,len(experiment.graph)+1):
	m = Algorithm2()
	experiment.setModel(m,i)
seed = Event((-1,-1),0.0,1,1)
experiment.init(seed)
experiment.run()
